name: CI of the app itself; CD on KinD will be managed through GitOps with argoCD

on:
  push:
      branches:
        - main
      paths: 
        - 'app/**' # triggers the workflow when the app folder code is updated
env:
    Registry: ghcr.io
    Repository: memor24/kag-imgfolder

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:  # github actions permissions to access the repository and the registry
      contents: read
      packages: write
    steps:

        - name: checkout the code
          uses: actions/checkout@v2

        - name: login to the GHCR
          uses: docker/login-action@v2
          with:
                registry: ${{ env.Registry }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

        - name: build & push the image with updated image tag
          run: |
            docker build -t my-app:${{ github.sha }} ./app
            docker tag my-app:${{  github.sha }} ${{ env.Registry }}/${{ env.Repository }}/my-app:${{ github.sha }}
            docker push ${{ env.Registry }}/${{ env.Repository }}/my-app:${{ github.sha }}


# install and run KinD


# install and run argoCD --namespace argocd on the empty cluster 

## argoCD installs kubectl and git for its own use by default


# update manifests with the new image using application.yml (GitOps) 
              # source: git repo /app/**
              # destination:  default.kubernetes.io (same cluster)
# deploy manifests on --namespace app-ns on the cluster