name: CI of the app itself; CD on KinD will be managed through GitOps with argoCD

on:
  push:
      branches:
        - main
      paths: 
        - 'app/**' # triggers the workflow when the app folder code is updated
env:
    Registry: ghcr.io
    Repository: memor24/kag-imgfolder

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:  # github actions permissions to access the repository and the registry
      contents: read
      packages: write
    steps:

        - name: checkout the code
          uses: actions/checkout@v2

        - name: login to the GHCR
          uses: docker/login-action@v2
          with:
                registry: ${{ env.Registry }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

        - name: build & push the image with updated image tag
          run: |
            docker build -t my-app:${{ github.sha }} ./app
            docker tag my-app:${{  github.sha }} ${{ env.Registry }}/${{ env.Repository }}/my-app:${{ github.sha }}
            docker push ${{ env.Registry }}/${{ env.Repository }}/my-app:${{ github.sha }}


        # - name : create regcred kubernetes secret for kubectl acccess to ghcr
        #   run: |
        #     kubectl create secret docker-registry regcred \
        #     --docker-server=ghcr.io \
        #     --docker-username=${{ github.actor }} \
        #     --docker-password=${{ secrets.GITHUB_TOKEN }} \
        #     --docker-email=${{ github.actor }}@sth.co \
        #   # --dry-run=client -o yaml | kubectl apply -f -
   

# argoCD looks for any changes in git repo app/** e.g. new image tag, 
              ## using application.yml (GitOps) 
              ## source: git repo 
              ## destination:  kubernetes.default.svc (same cluster)